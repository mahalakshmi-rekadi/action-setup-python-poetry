name: "Install Python and Poetry"
author: "Marcel Arns"
description: "Set up a specific version of Poetry with specific version of Python and install dependencies"
inputs:
  poetry_version:
    description: "Poetry version to install"
    required: false
  python_version:
    description: "Python version to use"
    required: false
  ssh_key:
    description: "SSH key to use to clone private repositories"
    required: false
  working_directory:
    description: "Working directory, defaults to GITHUB_WORKSPACE"
    required: false
    default: ${{ github.workspace }}
  # ToDo: Remove disable cache option when https://github.com/actions/setup-python/issues/361 is fixed
  poetry_cache_enabled:
    description: "Caching of Poetry environment"
    default: "true"

outputs:
  python-version:
    description: "Python version"
    value: ${{ steps.setup-python.outputs.python-version }}
  poetry-version:
    description: "Poetry version"
    value: ${{ steps.detect-versions.outputs.poetry-version }}

runs:
  using: "composite"
  steps:

    - name: Determine Python and Poetry versions
      id: detect-versions
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |
        if [ -z "${{ inputs.python_version }}" ] ; then
            PYTHON_VERSION="$(sed -n -e '/^\[metadata\]/,/^\[/p' poetry.lock | sed -n -e 's/^python-versions[[:space:]]*=[[:space:]]*//p' | tr -d \"'[:space:]'\'~^)"
        else
            PYTHON_VERSION="${{ inputs.python_version }}"
        fi

        if [ -z "${{ inputs.poetry_version }}" ] ; then
            POETRY_VERSION="$(head --lines=1 poetry.lock | grep --only-matching '[0-9]\+\.[0-9]\+\.[0-9]\+')"
        else
            POETRY_VERIONS="${{ inputs.poetry_version }}"
        fi

        echo "python-version=$PYTHON_VERSION" >> $GITHUB_OUTPUT
        echo "poetry-version=$POETRY_VERSION" >> $GITHUB_OUTPUT

    - name: Install and configure Poetry
      shell: bash
      run: pipx install poetry==${{ steps.detect-versions.outputs.poetry-version }}

    - uses: actions/setup-python@v4
      id: setup-python
      with:
        python-version: '${{ steps.detect-versions.outputs.python-version }}'
        # ToDo: Remove conditional expressions below when https://github.com/actions/setup-python/issues/361 is fixed
        cache: ${{ inputs.poetry_cache_enabled == 'true' && 'poetry' || ''}}
        cache-dependency-path: ${{ inputs.poetry_cache_enabled == 'true' && format('{0}/poetry.lock', inputs.working_directory) || ''}}

    - run: |
        if [ "$(echo ${{ steps.detect-versions.outputs.poetry-version }} | cut -c1-4)" == "1.5." ]; then
            poetry lock --check
        else
            poetry check --lock
        fi
      shell: bash
      working-directory: ${{ inputs.working_directory }}

    - name: Create virtualenv and install dependencies
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |
        if [ ! -z "${{ inputs.ssh_key }}" ]; then
            eval "$(ssh-agent -s)"
            ssh-add - <<< "${{ inputs.ssh_key }}"
        fi

        poetry install
